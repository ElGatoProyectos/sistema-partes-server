// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  //para omitir campos
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum E_Rol_BD {
  ADMIN // Alejandro
  USER //  Capaz superior a la de abajo
  GERENTE_PROYECTO
  RESIDENCIA
  CONTROL_COSTOS
  ASISTENTE_CONTROL_COSTOS
  INGENIERO_PRODUCCION
  ASISTENTE_PRODUCCION
  MAESTRO_OBRA
  CAPATAZ
  ADMINISTRACION_OBRA
  INGENIERO_SSOMMA
  ASISTENTE_SSOMMA
  LOGISTICA
  ASISTENTE_ALMACEN
}

enum E_Estado_Riesgo_BD {
  PENDIENTE
  SOLUCIONADO
}

enum E_Categoria_Salarial_Obrero_BD {
  BASICO
  INTERMEDIO
  AVANZADO
}

enum E_Riesgo_BD {
  BAJO
  MEDIO
  ALTO
}

//si esta activo o no 
enum E_Estado_BD {
  y
  n
}

enum E_TIPO_PARENTESCO_BD {
  PADRE
  MADRE
  HIJO
  HIJA
  ABUELO
  ABUELA
  SOBRINA
  SOBRINO
}

enum E_Proyecto_Estado {
  ACTIVO
  INACTIVO
  PENDIENTE
  FINALIZADO
}

model Rol {
  id                Int       @id @default(autoincrement())
  nombre_secundario String
  descripcion       String
  rol               String
  Usuario           Usuario[]
}

//[success] actual
model Usuario {
  id                    Int                     @id @default(autoincrement())
  email                 String
  dni                   String                  @unique
  nombre_completo       String
  telefono              String
  limite_proyecto       Int                     @default(1)
  limite_usuarios       Int
  eliminado             E_Estado_BD             @default(n)
  contrasena            String
  fecha_creacion        DateTime                @default(now())
  rol_id                Int
  Rol                   Rol                     @relation(fields: [rol_id], references: [id])
  Empresa               Empresa[]
  DetalleUsuarioEmpresa DetalleUsuarioEmpresa[]
}

//[success] actual
model ManoObra {
  id                          Int                           @id @default(autoincrement())
  //datos básicos
  email_personal              String                        @unique
  nombres                     String
  apellido_materno            String
  apellido_paterno            String
  turno                       String?
  sede_local                  String?
  fecha_inicio                DateTime                      @db.Date //año más dia
  fecha_cese                  DateTime                      @db.Date //año más dia
  //hay un estado para esto 
  estado                      E_Estado_BD?                  @default(y)
  eliminado                   E_Estado_BD                   @default(n)
  telefono                    String
  usuario_marcacion           String?                       @default("")
  domicilio                   String?
  lugar_nacimiento            String?
  genero                      String?
  tipo_documento              String?
  documento_identidad         String
  contrasena                  String
  profesion                   String?
  estado_civil                String?
  n_libreta_militar           String?
  n_pasaporte                 String?
  email_corporativo           String?
  brebete                     String?
  grado_instruccion           String?
  ruc                         String?
  tipo_cese                   String?
  carnet_extranjeria          String?
  condicion                   String? //por ejemplo inválido 
  pais_origen                 String?
  observacion                 String?                       @db.Text()
  hora_ingreso                String?
  hora_salida                 String?
  tolerancia_ingreso          String?
  tiempo_refrigerio           String?
  fecha_creacion              DateTime                      @default(now())
  //termina básico
  unidad                      Int
  banco                       String
  cuenta                      String                        @db.Text()
  fecha_nacimiento            DateTime                      @db.Date //año más dia
  escolaridad                 String
  usuario_id                  Int
  tipo_obrero_id              Int                           @unique
  origen_obrero_id            Int                           @unique
  especialidad_obrero_id      Int                           @unique
  categoria_obrero_id         Int                           @unique
  Asistencia                  Asistencia[]
  CategoriaObrero             CategoriaObrero               @relation(fields: [categoria_obrero_id], references: [id])
  EspecialidadObra            EspecialidadObrero            @relation(fields: [especialidad_obrero_id], references: [id])
  TipoObrero                  TipoObrero                    @relation(fields: [tipo_obrero_id], references: [id])
  OrigenObrero                OrigenObrero                  @relation(fields: [origen_obrero_id], references: [id])
  ParteDiarioMo               ParteDiarioMO[]
  ManoObraDatoLaboral         ManoObraDatoLaboral[]
  ManoObraSemana              ManoObraSemana[]
  ManoObraComposicionFamiliar ManoObraComposicionFamiliar[]
  ManoObraExperienciaLaboral  ManoObraExperienciaLaboral[]
  ManoObraEstudios            ManoObraEstudios[]
  detalle_combo_mo            detalle_combo_mo[]
}

//[note] modulo futuro
//si trabajas hoy o no para el trabajador
model ManoObraSemana {
  id             Int         @id @default(autoincrement())
  lunes          E_Estado_BD @default(y)
  martes         E_Estado_BD @default(y)
  miercoles      E_Estado_BD @default(y)
  jueves         E_Estado_BD @default(y)
  viernes        E_Estado_BD @default(y)
  sabado         E_Estado_BD @default(y)
  domingo        E_Estado_BD @default(y)
  fecha_creacion DateTime    @default(now())
  mano_obra_id   Int
  ManoObra       ManoObra    @relation(fields: [mano_obra_id], references: [id])
}

//[note] modulo futuro
model ManoObraDatoLaboral {
  id                       Int                            @id @default(autoincrement())
  seccion_id               Int
  area_mo_id               Int
  mano_obra_id             Int
  puesto_id                Int
  fecha_creacion           DateTime                       @default(now())
  // OJO PUEDE CAMBIARSE POR LA BBDD PARA EL RENDIMIENTO
  categoria_salarial_id    E_Categoria_Salarial_Obrero_BD
  departamento_mo_id       Int
  fecha_ingreso_planilla   DateTime                       @db.Date
  //revisar lo de truncas
  fecha_vacaciones_truncas DateTime                       @db.Date
  //afp o onp
  tipo_afiliacion          String
  PuestoObrero             PuestoObrero                   @relation(fields: [puesto_id], references: [id])
  DepartamentoObrero       DepartamentoObrero             @relation(fields: [departamento_mo_id], references: [id])
  AreaObrero               AreaObrero                     @relation(fields: [area_mo_id], references: [id])
  ManoObra                 ManoObra                       @relation(fields: [mano_obra_id], references: [id])
  SeccionObrero            SeccionObrero                  @relation(fields: [seccion_id], references: [id])
}

//[note] modulo futuro
model ManoObraComposicionFamiliar {
  id                    Int                  @id @default(autoincrement())
  apellido_materno      String
  apellido_paterno      String
  nombres               String
  tipo_parentesco       E_TIPO_PARENTESCO_BD
  acta_matrimonial      String
  fecha_nacimiento      DateTime             @db.Date()
  estado_civil          String
  genero                String
  vive                  E_Estado_BD
  partida_difuncion     String
  tipo_documento        String
  documento_identidad   String
  grado_instruccion     String
  fecha_creacion        DateTime             @default(now())
  //si vive en otro lugar 
  vive_otro_domicilio   E_Estado_BD
  direccion             String
  asegurado             E_Estado_BD
  no_independiente      E_Estado_BD
  ocupacion             String
  ingreso_mensual       Float
  centro_trabajo        String
  incapacitado          E_Estado_BD
  documento_incapacidad String
  mano_obra_id          Int
  ManoObra              ManoObra             @relation(fields: [mano_obra_id], references: [id])
}

//[note] modulo futuro
model ManoObraExperienciaLaboral {
  id             Int      @id @default(autoincrement())
  desde          DateTime @db.Date
  hasta          DateTime @db.Date
  tipo_contrato  String
  tipo_cese      String
  remuneracion   Float
  logros         String?
  fecha_creacion DateTime @default(now())
  mano_obra_id   Int
  ManoObra       ManoObra @relation(fields: [mano_obra_id], references: [id])
}

//[note] modulo futuro
model ManoObraEstudios {
  id             Int      @id @default(autoincrement())
  tipo_estudio   String
  desde          DateTime @db.Date
  hasta          DateTime @db.Date
  nivel_obtenido String
  centro_estudio String
  lugar_estudio  String
  institucion    String
  especialidad   String?
  fecha_creacion DateTime @default(now())
  mano_obra_id   Int
  ManoObra       ManoObra @relation(fields: [mano_obra_id], references: [id])
}

//[note] modulo futuro
model PuestoObrero {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  fecha_creacion      DateTime              @default(now())
  ManoObraDatoLaboral ManoObraDatoLaboral[]
}

//[success] actual
model SeccionObrero {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  fecha_creacion      DateTime              @default(now())
  proyecto_id         Int
  Proyecto            Proyecto              @relation(fields: [proyecto_id], references: [id])
  ManoObraDatoLaboral ManoObraDatoLaboral[]
}

//[success] actual
model DepartamentoObrero {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  fecha_creacion      DateTime              @default(now())
  proyecto_id         Int
  Proyecto            Proyecto              @relation(fields: [proyecto_id], references: [id])
  ManoObraDatoLaboral ManoObraDatoLaboral[]
}

//[success] actual
model AreaObrero {
  id                  Int                   @id @default(autoincrement())
  fecha_creacion      DateTime              @default(now())
  proyecto_id         Int
  Proyecto            Proyecto              @relation(fields: [proyecto_id], references: [id])
  ManoObraDatoLaboral ManoObraDatoLaboral[]
}

//[success] actual
model Empresa {
  id                    Int                     @id @default(autoincrement())
  nombre_empresa        String
  descripcion_empresa   String?                 @db.Text()
  ruc                   String?
  direccion             String?
  nombre_corto          String?
  telefono              String
  usuario_id            Int
  fecha_creacion        DateTime                @default(now())
  eliminado             E_Estado_BD             @default(n)
  DetalleUsuarioEmpresa DetalleUsuarioEmpresa[]
  Usuario               Usuario                 @relation(fields: [usuario_id], references: [id])
  Proyecto              Proyecto[]
}

//[success] actual
model DetalleUsuarioEmpresa {
  id         Int     @id @default(autoincrement())
  usuario_id Int
  empresa_id Int
  Usuario    Usuario @relation(fields: [usuario_id], references: [id])
  Empresa    Empresa @relation(fields: [empresa_id], references: [id])
}

//[success] actual
model Proyecto {
  id                  Int                  @id @default(autoincrement())
  nombre_completo     String               @db.Text()
  descripcion         String?              @db.Text()
  direccion           String
  nombre_consorcio    String
  nombre_corto        String
  costo_proyecto      Float
  estado              E_Proyecto_Estado
  eliminado           E_Estado_BD          @default(n)
  fecha_creacion      DateTime             @db.Date()
  fecha_fin           DateTime             @db.Date()
  plazo_proyecto      String
  color_primario      String?
  color_personalizado String?
  color_linea         String?
  color_detalle       String?
  color_menu          String?
  color_submenu       String?
  codigo_proyecto     String
  empresa_id          Int
  color_proyecto      String
  Empresa             Empresa              @relation(fields: [empresa_id], references: [id])
  UnidadProduccion    UnidadProduccion[]
  Tren                Tren[]
  Partida             Partida[]
  SeccionObrero       SeccionObrero[]
  DepartamentoObrero  DepartamentoObrero[]
  AreaObrero          AreaObrero[]
  Combo               Combo[]
}

model Combo {
  id               Int                @id @default(autoincrement())
  nombre           String
  fecha_creacion   DateTime           @default(now())
  proyecto_id      Int
  Proyecto         Proyecto           @relation(fields: [proyecto_id], references: [id])
  detalle_combo_mo detalle_combo_mo[]
}

model detalle_combo_mo {
  id       Int      @id @default(autoincrement())
  combo_id Int
  mo_id    Int
  ManoObra ManoObra @relation(fields: [mo_id], references: [id])
  Combo    Combo    @relation(fields: [combo_id], references: [id])
}

//[success] actual
model UnidadProduccion {
  id             Int         @id @default(autoincrement())
  codigo         String      @unique
  nombre         String
  nota           String?     @db.Text()
  eliminado      E_Estado_BD @default(n)
  proyecto_id    Int
  fecha_creacion DateTime    @default(now())
  Proyecto       Proyecto    @relation(fields: [proyecto_id], references: [id])
  Trabajo        Trabajo[]
}

//[success] actual
model Tren {
  id             Int           @id @default(autoincrement())
  codigo         String        @unique
  nombre         String
  cuadrilla      String?
  nota           String?       @db.Text()
  operario       Int
  oficial        Int
  peon           Int
  fecha_creacion DateTime      @default(now())
  proyecto_id    Int
  ReporteTren    ReporteTren[]
  Trabajo        Trabajo[]
  Proyecto       Proyecto      @relation(fields: [proyecto_id], references: [id])
}

//[success] actual
model Partida {
  id                    Int                     @id @default(autoincrement())
  id_interno            String                  @unique
  item                  String
  partida               String
  unidad                String
  metrado               Float
  precio                Float
  parcial               Float?                  @default(0)
  total                 Float?                  @default(0)
  fecha_creacion        DateTime                @default(now())
  proyecto_id           Int
  ReportePartida        ReportePartida[]
  Proyecto              Proyecto                @relation(fields: [proyecto_id], references: [id])
  DetalleTrabajoPartida DetalleTrabajoPartida[]
}

//[success] actual
model Trabajo {
  id                    Int                     @id @default(autoincrement())
  codigo                String
  nombre                String
  duracion              Int
  fecha_inicio          DateTime                @db.Date //año más dia
  fecha_finalizacion    DateTime                @db.Date //año más dia
  eliminado             E_Estado_BD             @default(n)
  fecha_creacion        DateTime                @default(now())
  costo_partida         Int
  costo_mano_obra       Int
  costo_material        Int
  costo_equipo          Int
  costo_varios          Int
  tren_id               Int                     @unique
  up_id                 Int                     @unique
  Tren                  Tren                    @relation(fields: [tren_id], references: [id])
  UnidadProduccion      UnidadProduccion        @relation(fields: [up_id], references: [id])
  ParteDiario           ParteDiario[]
  DetalleTrabajoPartida DetalleTrabajoPartida[]
}

//[success] actual
model DetalleTrabajoPartida {
  id         Int     @id @default(autoincrement())
  trabajo_id Int
  partida_id Int
  Trabajo    Trabajo @relation(fields: [trabajo_id], references: [id])
  Partida    Partida @relation(fields: [partida_id], references: [id])
}

//[success] actual
model CategoriaObrero {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  fecha_creacion      DateTime              @default(now())
  ManoObra            ManoObra[]
  DetallePrecioHoraMO DetallePrecioHoraMO[]
}

//[success] actual
model TipoObrero {
  id             Int        @id @default(autoincrement())
  nombre         String
  fecha_creacion DateTime   @default(now())
  ManoObra       ManoObra[]
}

//[success] actual
model OrigenObrero {
  id             Int        @id @default(autoincrement())
  nombre         String
  fecha_creacion DateTime   @default(now())
  ManoObra       ManoObra[]
}

//[success] actual
model EspecialidadObrero {
  id             Int        @id @default(autoincrement())
  nombre         String
  fecha_creacion DateTime   @default(now())
  ManoObra       ManoObra[]
}

//[success] actual
model Recurso {
  id                 Int                  @id @default(autoincrement())
  id_indice          String               @unique
  id_unificado       String               @unique
  codigo             String               @unique
  recurso            String
  unidad             String
  precio             Float
  fecha_creacion     DateTime             @default(now())
  categoria_recurso  Int                  @unique
  CategoriaRecurso   CategoriaRecurso     @relation(fields: [categoria_recurso], references: [id])
  ParteDiarioRecurso ParteDiarioRecurso[]
}

//[success] actual
model CategoriaRecurso {
  id             Int       @id @default(autoincrement())
  nombre         String
  fecha_creacion DateTime  @default(now())
  Recurso        Recurso[]
}

enum E_Asistencia_BD {
  F
  A
}

//[success] actual
model Asistencia {
  id                  Int             @id @default(autoincrement())
  fecha               DateTime
  hora_inicio         String
  hora_fin            String
  horas               Float
  asistencia          E_Asistencia_BD @default(F)
  horas_extras_estado E_Estado_BD     @default(n)
  fecha_creacion      DateTime        @default(now())
  horas_extras        Float
  mano_obra_id        Int             @unique
  ManoObra            ManoObra        @relation(fields: [mano_obra_id], references: [id])
}

//[success] actual
model ParteDiario {
  id                     Int                  @id @default(autoincrement())
  nombre                 String
  fecha                  DateTime             @db.Date()
  etapa                  String
  jornada                String
  fecha_creacion         DateTime             @default(now())
  hora_inicio            String
  hora_fin               String
  descripcion_actividad  String?              @db.Text()
  nota                   String?              @db.Text()
  distanciamiento        E_Estado_BD?
  protocolo_ingreso      E_Estado_BD?
  protocolo_salida       E_Estado_BD?
  riesto_parte_diario_id Int
  trabajo_id             Int                  @unique
  RiesgoParteDiario      RiesgoParteDiario    @relation(fields: [riesto_parte_diario_id], references: [id])
  Trabajo                Trabajo              @relation(fields: [trabajo_id], references: [id])
  ParteDiarioMo          ParteDiarioMO[]
  ParteDiarioRecurso     ParteDiarioRecurso[]
}

//[success] actual
model RiesgoParteDiario {
  id             Int                @id @default(autoincrement())
  descripcion    String
  estado         E_Estado_Riesgo_BD
  riesgo         E_Riesgo_BD
  fecha_creacion DateTime           @default(now())
  ParteDiario    ParteDiario[]
}

//[success] actual
model ParteDiarioMO {
  id              Int         @id @default(autoincrement())
  parte_diario_id Int
  mano_obra_id    Int
  fecha_creacion  DateTime    @default(now())
  ParteDiario     ParteDiario @relation(fields: [parte_diario_id], references: [id])
  ManoObra        ManoObra    @relation(fields: [mano_obra_id], references: [id])
}

//[success] actual
model ParteDiarioRecurso {
  id              Int         @id @default(autoincrement())
  parte_diario_id Int
  recurso_id      Int
  cantidad        Int
  fecha_creacion  DateTime    @default(now())
  ParteDiario     ParteDiario @relation(fields: [parte_diario_id], references: [id])
  Recurso         Recurso     @relation(fields: [recurso_id], references: [id])
}

//[success] actual
model PrecioHoraMO {
  id             Int      @id @default(autoincrement())
  fecha_inicio   DateTime @db.Date()
  fecha_fin      DateTime @db.Date()
  fecha_creacion DateTime @default(now())
  nombre         String
}

//[success] actual
model DetallePrecioHoraMO {
  id                  Int             @id @default(autoincrement())
  codigo              String          @unique
  hora_normal         Float
  hora_extra_60       Float
  hora_extra_100      Float
  categoria_obrero_id Int
  CategoriaObrero     CategoriaObrero @relation(fields: [categoria_obrero_id], references: [id])
}

//[success] actual
model ReporteTren {
  id             Int      @id @default(autoincrement())
  costo_total    Float
  costo_anterior Float
  costo_actual   Float
  costo_parcial  Float
  saldo          Float?   @default(0)
  lunes          Float?   @default(0)
  martes         Float?   @default(0)
  miercoles      Float?   @default(0)
  jueves         Float?   @default(0)
  viernes        Float?   @default(0)
  sabado         Float?   @default(0)
  domingo        Float?   @default(0)
  fecha_inicio   DateTime @db.Date()
  fecha_fin      DateTime @db.Date()
  fecha_creacion DateTime @default(now())
  tren_id        Int
  Tren           Tren     @relation(fields: [tren_id], references: [id])
}

//[success] actual
model ReportePartida {
  id             Int      @id @default(autoincrement())
  costo_total    Float
  costo_anterior Float
  costo_actual   Float
  costo_parcial  Float
  fecha_creacion DateTime @default(now())
  partida_id     Int
  Partida        Partida  @relation(fields: [partida_id], references: [id])
}
